{"version":3,"sources":["components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filters/Filters.js","App.js","index.js"],"names":["ContactItem","id","name","number","onRemove","className","type","onClick","ContactList","contacts","onRemoveContact","map","contact","ContactForm","state","handleSubmitForm","e","preventDefault","onSubmit","props","validateForm","shortid","generate","reset","handleChange","currentTarget","value","setState","check","alert","this","pattern","title","required","onChange","placeholder","Component","Filter","filter","changeFilter","target","App","console","log","visibleContacts","toLowerCase","includes","checkContact","checked","find","handlerRemoveContact","localStorage","getItem","parsetContact","JSON","parse","prevProps","prevState","setItem","stringify","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89c2fd5e.chunk.js","sourcesContent":["import React from 'react';\nimport './ContactList.scss';\n\nconst ContactItem = ({ id, name, number , onRemove }) => {\n    return (\n        <li className=\"Contact-List\" key={id}> \n            {name}: {number} <button className=\"Button-List\" type=\"submit\" onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n}\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n    return (\n        <ul >\n            {contacts.map( contact => (\n                <ContactItem \n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n                onRemove={onRemoveContact}\n                />\n            ))}\n        </ul>\n    )\n};\n\n\nexport default ContactList;\n","import  { Component } from 'react';\nimport shortid from 'shortid';\n\nimport './ContactForm.scss';\n\nclass ContactForm extends Component {\n\n    state = {\n        name: '',\n        number: ''\n    };\n  \n    handleSubmitForm = e => {\n        e.preventDefault();\n        const { onSubmit } = this.props;\n        const { name, number } = this.state;\n        \n        const isValidateForm = this.validateForm()\n        if(!isValidateForm) return \n        onSubmit({id: shortid.generate(), name, number})\n\n        this.reset();\n    };\n     \n    handleChange = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({ [name]: value });\n    };\n \n    reset = () => {\n        this.setState({ id: shortid.generate(), name: '' , number: '' });\n    };\n\n    validateForm = () => {\n        const { name, number } = this.state\n        const { check } = this.props\n        if (!name || !number) {\n            alert('Some filed is empty')\n        }\n        return check(name);\n    };\n\n    render() {\n        return (\n            \n            <form className=\"Form\" onSubmit={this.handleSubmitForm}>\n                <label className=\"Label\">\n                Name  <input className=\"Input\"\n                        id={this.state.id}\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.handleChange} \n                        placeholder=\"name\"  \n                    /> \n                </label>\n                <label>\n                Number  <input  className=\"Input\"\n                        type=\"tel\"\n                        name=\"number\"\n                        placeholder=\"number\"\n                        value={this.state.number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <button className=\"Button\" type=\"submit\">Add contact</button> \n            </form>    \n        );\n    }\n};\n\nexport default ContactForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Filters.scss';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <>\n        <h3> Find contacts by me </h3>\n      <input className=\"Input-Filter\"\n        type=\"text\"\n        name=''\n        value={filter}\n        onChange={(e) => changeFilter(e.target.value)}\n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import React from 'react';\nimport  { Component } from 'react';\n\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filters';\n\nimport './App.scss';\n\nclass App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    }\n    \n    handleSubmitForm = (contact) => {\n        console.log(contact)\n        this.setState(({contacts}) => ({\n            contacts: [...contacts, contact],\n        }));\n    }\n    \n    changeFilter = filter => {\n        this.setState({ filter });\n    };\n\n    visibleContacts = () => {\n        const { contacts, filter } = this.state;\n\n        return contacts.filter( contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase())\n        );\n    };\n    \n    checkContact = ( name ) => {\n        const { contacts } = this.state\n        \n        const checked = !!contacts.find(\n        (contact) => contact.name === name);\n  \n        checked && alert(`${name} is already in contacts`)\n        return !checked\n      \n    };\n\n    handlerRemoveContact = id => \n        this.setState(({contacts}) => ({\n        contacts: contacts.filter((contact) => contact.id !== id)\n    }));\n    \n    componentDidMount(){\n        const contacts = localStorage.getItem('contacts');\n        const parsetContact = JSON.parse(contacts);\n        if (parsetContact){\n            this.setState({ contacts: parsetContact });\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(this.state.contacts !== prevState.contacts) {\n            localStorage.setItem( 'contacts', JSON.stringify(this.state.contacts));\n        }\n    }\n\n    render() { \n        const { contacts, filter } = this.state;\n\n        return (\n            <div className='Phonebook'>\n               <h1 className='Phonebook-title'>Phonebook</h1>\n                <ContactForm    onSubmit={this.handleSubmitForm} check={this.checkContact} />\n          \n                <h2>Contacts</h2>\n                {contacts.length > 1 && (\n                    <Filter filter={filter} changeFilter={this.changeFilter} />\n                )}\n\n                {contacts.length > 0 && (\n                    <ContactList\n                        contacts={this.visibleContacts()}\n                        onRemoveContact={this.handlerRemoveContact}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}